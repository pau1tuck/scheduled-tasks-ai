# docker-compose.yml
services:
  web:
    build:
      context: .
      args:
        DJANGO_SECRET_KEY: ${DJANGO_SECRET_KEY} 
    container_name: scheduled-tasks-ai-django
    command: >
      sh -c "python manage.py collectstatic --noinput &&
             python manage.py migrate &&
             python manage.py runserver 0.0.0.0:8000"
    volumes:
      - .:/app
      - ./db.sqlite3:/app/db.sqlite3
    ports:
      - "8000:8000"
    environment:
      REDIS_URL: ${REDIS_URL} 
      REDIS_HOST: ${REDIS_HOST}
      REDIS_PORT: ${REDIS_PORT}
      REDIS_DB: ${REDIS_DB}
      DB_NAME: ${DB_NAME}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_HOST: ${DB_HOST}
      DB_PORT: ${DB_PORT}
    env_file: 
      - .env
    restart: always
    depends_on:
      db:
        condition: service_started
      redis:
        condition: service_started

  db:
    image: postgres:15-alpine
    container_name: scheduled-tasks-ai-postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
    env_file:
      - .env
    ports:
      - "5432:5432"
    restart: always
    
  redis:
    image: redis:7-alpine
    container_name: scheduled-tasks-ai-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: always

  qcluster:
    build: .
    container_name: scheduled-tasks-ai-qcluster
    command: python manage.py qcluster
    volumes:
      - .:/app
    environment:
      REDIS_URL: ${REDIS_URL}
      REDIS_HOST: ${REDIS_HOST}
      REDIS_PORT: ${REDIS_PORT}
      REDIS_DB: ${REDIS_DB}
      DB_NAME: ${DB_NAME}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_HOST: ${DB_HOST}
      DB_PORT: ${DB_PORT}
    env_file:
      - .env
    depends_on:
      db:
        condition: service_started
      redis:
        condition: service_started
    restart: always

  celery_worker:
    build: .
    container_name: scheduled-tasks-ai-celery-worker
    command: python -m celery -A core worker -l INFO
    volumes:
      - .:/app
    environment:
      REDIS_URL: ${REDIS_URL}
      REDIS_HOST: ${REDIS_HOST}
      REDIS_PORT: ${REDIS_PORT}
      REDIS_DB: ${REDIS_DB}
      DB_NAME: ${DB_NAME}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_HOST: ${DB_HOST}
      DB_PORT: ${DB_PORT}
    env_file:
      - .env
    depends_on:
      db:
        condition: service_started
      redis:
        condition: service_started
    restart: always

volumes:
  redis_data:  # Development: Define the named volume for Redis persistence
  postgres_data:  # Development: Define the named volume for PostgreSQL persistence:
