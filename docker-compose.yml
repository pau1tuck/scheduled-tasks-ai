# docker-compose.yml
services:
  web:
    build:
      context: .
      args:
        # Development: Pass the Django secret key as an environment variable:
        DJANGO_SECRET_KEY: ${DJANGO_SECRET_KEY} 
    container_name: scheduled-tasks-ai-django
    command: python manage.py runserver 0.0.0.0:8000
    volumes:
      - .:/app
      - ./db.sqlite3:/app/db.sqlite3  # Development: Persist SQLite database
    ports:
      - "8000:8000"
    environment:
      REDIS_URL: "redis://redis:6379/5"
      REDIS_HOST: "redis"
      REDIS_PORT: 6379
      REDIS_DB: 5
    env_file: 
      - .env
    restart: always
    depends_on:
      - redis
      - db

  db:
    image: postgres:15-alpine
    container_name: scheduled-tasks-ai-postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
    env_file:
      - .env
    ports:
      - "5432:5432"
    restart: always
    
  redis:
    image: redis:7-alpine
    container_name: scheduled-tasks-ai-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: always

  qcluster:
    image: scheduled-tasks-ai-web
    container_name: scheduled-tasks-ai-qcluster
    working_dir: /app
    volumes:
      - .:/app
    command: python manage.py qcluster
    environment:
      REDIS_URL: "redis://redis:6379/5"
      REDIS_HOST: "redis"
      REDIS_PORT: 6379
      REDIS_DB: 5
    env_file:
      - .env
    restart: always
    depends_on:
      - redis
    #  - db

  celery_worker:
    build: .
    container_name: scheduled-tasks-ai-celery-worker
    command: celery -A core worker -l INFO
    volumes:
      - .:/app
    environment:
      REDIS_URL: "redis://redis:6379/5"
      REDIS_HOST: "redis"
      REDIS_PORT: 6379
      REDIS_DB: 5
    env_file:
      - .env
    depends_on:
      - redis
      - web
    restart: always

volumes:
  redis_data:  # Development: Define the named volume for Redis persistence
  postgres_data:  # Development: Define the named volume for PostgreSQL persistence:
